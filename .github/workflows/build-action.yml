# 工作流名称：构建与发布
name: Build and release

# 触发条件：仅当推送 v* 标签时触发
on:
    push:
        tags: ['v*']
    workflow_dispatch:

env:
    CARGO_INCREMENTAL: 0

jobs:
    release:
        permissions:
            contents: write

        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: macos-latest
                      target: universal-apple-darwin
                      bundle: dmg
                    - platform: windows-latest
                      target: x86_64-pc-windows-msvc
                      bundle: msi

        runs-on: ${{ matrix.platform }}

        steps:
            # 1. 检出
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # 1.5 统一版本：把 tag 写入 package.json 和 Cargo.toml
            - name: Sync version from git tag
              id: sync
              shell: bash
              run: |
                  VERSION=${GITHUB_REF#refs/tags/v}
                  echo "VERSION=$VERSION" >> $GITHUB_ENV
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

                  # 写 package.json
                  node -e "
                    const fs = require('fs');
                    const pkg = JSON.parse(fs.readFileSync('./package.json','utf8'));
                    pkg.version = '$VERSION';
                    fs.writeFileSync('./package.json', JSON.stringify(pkg, null, 2) + '\n');
                  "

                  # 写 Cargo.toml
                  cargo install toml-cli --quiet || true
                  toml set src-tauri/Cargo.toml package.version "$VERSION" > tmp.toml
                  mv tmp.toml src-tauri/Cargo.toml

            # 2. Rust 环境
            - name: Setup Rust
              uses: dtolnay/rust-toolchain@stable
            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: './src-tauri -> target'

            # 3. Node & pnpm
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Install pnpm
              run: npm i -g pnpm
            - name: Install dependencies
              run: pnpm install

            # 4. 构建 & 发布
            - name: Build Tauri App
              uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
                  TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
              with:
                  tagName: v${{ env.VERSION }}
                  releaseName: v${{ env.VERSION }}
                  releaseBody: 'Version v${{ env.VERSION }} — built by GitHub Actions.'
                  releaseDraft: false
                  prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
